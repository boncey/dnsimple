#!/usr/bin/env ruby

require 'dnsimple'

DNSimple::Client.load_credentials

module DNSimple
  class Record
    def to_s
      case @record_type
      when "A" then "#{@record_type} record: \"#{@name}\" -> #{@content} (ttl: #{@ttl})"
      when "SOA" then "#{@record_type} #{@content} (ttl: #{@ttl})"
      when "CNAME" then "#{@record_type} record: #{@name} -> #{@content} (ttl: #{@ttl})"
      when "MX" then "#{@record_type} record: #{@content} (prio: #{@prio}, ttl: #{@ttl})"
      when "TXT" then "#{@record_type} record: #{@content} (ttl: #{@ttl})"
      when "SPF" then "#{@record_type} record: #{@content} (ttl: #{@ttl})"
      when "SRV" then "#{@record_type} record: #{@name} -> #{@content} (prio: #{@prio}, content: #{@content}, ttl: #{@ttl})"
      when "NS" then "#{@record_type} record: #{@content} (ttl: #{@ttl})"
      when "NAPTR" then "#{@record_type} record: #{@name} -> #{t.data} (ttl: #{@ttl})"
      else
        "Unrecognised! #{@record_type} record: name: #{@name} (prio: #{@prio}, content: #{@content}, ttl: #{@ttl})"
      end
    end
  end
end

def cat(domain)
  puts "==============================="
  puts "Domain #{domain.name}"
  puts "==============================="
  records = DNSimple::Record.all(domain)
  records.each do |record|
    case record.record_type
    when "A", "CNAME", "MX"
      puts record
    end
  end
  puts
  puts

  records
end

def clear(domain, records)
  puts "Clearing domain..."
  records.each do |record|
    case record.record_type
    when "A", "CNAME", "MX"
      puts "Clearing record #{record}"
      record.delete
    end
  end

end

def show(domain_name)
  domain = DNSimple::Domain.find(domain_name)
  puts "Found domain #{domain.name}"
  records = cat(domain)

  puts ("Are you sure you want to clear all records (y/n)")
  response = STDIN.gets.chomp

  if (response.downcase == "y")
    clear(domain, records)
  else
    puts "Aborting..."
    exit
  end
end

if (ARGV.empty?)
  puts "Usage: dns-clear <domain>"
  exit
end

show(ARGV[0])

